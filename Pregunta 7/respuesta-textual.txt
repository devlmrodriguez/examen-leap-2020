Llegué a la solución buscando formas de hacer un Physics.Overlap con la forma de un cono. Encontré diversas formas de hacerlo, entre estas una era obtener una mesh de un cono y utilizar su collider para ver que objetos estaban adentro. Pero como se necesitaba que la distancia y el ángulo del cono sean variables, me decidí por usar un modelo matemático encontrado en GameDev StackExchange. Básicamente, se compara la dirección del jugador hacia el enemigo y la dirección del jugador usando el producto punto, y este funciona tanto en 3D como en 2D. Este producto punto de ahí podemos compararlo con diversos valores para obtener un ángulo específico de visión. Lo común es 1.0 para enfrente y 0 para los costados, pero para un ángulo específico basta con compararlo contra su coseno. Y para obtener la lista de enemigos dentro de una distancia simplemente usé un Physics.OverlapSphere.